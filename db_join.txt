1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia
    SELECT students.name, students.surname, degrees.name AS 'corso di laurea'
    FROM `students` 
    INNER JOIN `degrees` 
    ON students.degree_id = degrees.id 
    WHERE degrees.id = 53;


2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di Neuroscienze
    SELECT degrees.name AS 'nome corso di laurea',
    departments.name AS 'nome dipartimento', 
    degrees.level AS 'tipo laurea'
    FROM degrees
    INNER JOIN departments
    ON department_id = departments.id
    WHERE departments.id = 7
    AND level = 'magistrale';

3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)
    SELECT course_teacher.course_id, 
    courses.name AS 'nome corso',
    teachers.name, teachers.surname
    FROM course_teacher
    INNER JOIN teachers
    ON course_teacher.teacher_id = teachers.id
    INNER JOIN courses
    ON course_teacher.course_id = courses.id
    WHERE teacher_id = 44;

4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il relativo dipartimento,
in ordine alfabetico per cognome e nome
    SELECT students.id,
    students.name,
    students.surname,
    degrees.name AS 'corso di laurea',
    departments.name AS 'dipartimento'
    FROM students
    INNER JOIN degrees
    ON students.degree_id = degrees.id
    INNER JOIN departments
    ON degrees.department_id = departments.id
    ORDER BY surname, name;


5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti
    SELECT degrees.id,
    degrees.name AS 'nome corso',
    courses.name AS 'corso',
    teachers.name AS 'nome docente',
    teachers.surname AS 'cognome docente'
    FROM degrees
    INNER JOIN courses
    ON degrees.id = courses.degree_id
    INNER JOIN course_teacher
    ON courses.id = course_teacher.course_id
    INNER JOIN teachers
    ON course_teacher.teacher_id = teachers.id;


6. Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica (54)
    SELECT DISTINCT teachers.name AS 'nome docente',
    teachers.surname AS 'cognome docente',
    departments.name AS 'dipartimento'
    FROM teachers
    INNER JOIN course_teacher
    ON teachers.id = course_teacher.teacher_id
    INNER JOIN courses
    ON course_teacher.course_id = courses.id
    INNER JOIN degrees
    ON courses.degree_id = degrees.id
    INNER JOIN departments
    ON degrees.department_id = departments.id
    WHERE departments.id = 5
    ORDER BY surname, 'nome docente';



7. BONUS: Selezionare per ogni studente il numero di tentativi sostenuti per ogni esame, stampando anche il voto massimo. 

    SELECT students.name,
    students.surname,
    courses.name AS 'corso',
    MAX(exam_student.vote) AS 'voto massimo',
    COUNT(exams.id) AS 'N° tentativi'
    FROM students
    INNER JOIN exam_student
    ON students.id = exam_student.student_id
    INNER JOIN exams
    ON exams.id = exam_student.exam_id
    INNER JOIN courses
    ON courses.id = exams.course_id
    GROUP BY students.id, courses.id;

7.1 BONUS: Successivamente, filtrare i tentativi con voto minimo 18.
    SELECT students.name,
    students.surname,
    courses.name AS 'corso',
    MAX(exam_student.vote) AS 'voto massimo',
    COUNT(exams.id) AS 'N° tentativi'
    FROM students
    INNER JOIN exam_student
    ON students.id = exam_student.student_id
    INNER JOIN exams
    ON exams.id = exam_student.exam_id
    INNER JOIN courses
    ON courses.id = exams.course_id
    WHERE exam_student.vote >= 18 
    GROUP BY students.id, courses.id;
